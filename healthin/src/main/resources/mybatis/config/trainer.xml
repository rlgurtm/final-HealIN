<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trainer">

	<resultMap type="trainerVO" id="trainerRM">
		<result property="membervo.id" column="id" />
		<result property="membervo.name" column="name" />
		<result property="membervo.email" column="e_mail" />
		<result property="membervo.tel" column="tel" />
		<result property="trainerPhoto" column="trainer_photo"/>
	</resultMap>

 	<select id="getTrainerTotalCount" resultType="int">
 		select count(*) from trainer where rank<![CDATA[>]]>0
 	</select>

	<select id="getTrainerList" resultMap="trainerRM" parameterType="pagingBean">
       select a.* from 
       (select row_number() over(order by rank desc) rnum,
       id,name,location,career,rank,trainer_photo
       from trainer t,health_member m
       where t.trainer_id=m.id and t.rank<![CDATA[ > ]]>0) a 
       where rnum between #{startRowNumber} and #{endRowNumber}
    </select>
    <select id="trainerOrderName" resultMap="trainerRM" parameterType="map">
       select a.* from 
       (select row_number() over(order by name asc) rnum,
       id,name,location,career,rank,trainer_photo
       from trainer t,health_member m
       where t.trainer_id=m.id and rank<![CDATA[ > ]]>0) a 
       where rnum between #{STARTROWNUM} and #{ENDROWNUM}
    </select>
    <select id="trainerOrderFollowing" resultMap="trainerRM" parameterType="map">
       select a.* from
       (select row_number() over(order by fcount desc) rnum,b.*,
       h.id,h.name,t.location,t.career,t.rank,t.trainer_photo
       from (select count(decode(apply_result,'Y',1)) as fcount ,f.trainer_id
       from FOLLOWING f,TRAINER t
       where t.trainer_id=f.trainer_id
       group by f.trainer_id) b,health_member h,trainer t
       where b.trainer_id=h.id and t.trainer_id=h.id) a
       where rnum between #{STARTROWNUM} and #{ENDROWNUM}
    </select>
    
    <select id="trainerDetail" resultMap="trainerRM">
    select id,name,tel,e_mail,location,career,trainer_photo
       from trainer t,health_member m
       where t.trainer_id=#{value} and t.trainer_id=m.id
    </select>
    
    <select id="trainerfollowingCount" resultType="int">
    	select count(*) from following where trainer_id=#{value} and apply_result='Y'
    </select>
    <select id="selectfollowState" resultType="String" parameterType="map">
    	select apply_result from following where user_id=#{MEMID} and trainer_id=#{TRAINERID}
    </select>
    <insert id="insertfollowtrainer">
 	   insert into following (user_id,trainer_id,apply_result) values(#{MEMID},#{TRAINERID},'Y')
    </insert>
    <update id="updatefollowState">
    	update following set apply_result=#{STATE} where user_id=#{MEMID} and trainer_id=#{TRAINERID}
    </update>
    <select id="getTrainerfollowingTotalCount" resultType="int">
    select count(*)
    from (select count(*)
	 	 from FOLLOWING f,TRAINER t
		 where t.trainer_id=f.trainer_id
	  	 group by f.trainer_id)
    </select>
    <select id="getTrainerLocTotalCount" resultType="int">
 	   select count(*) from trainer where location=#{value} and rank<![CDATA[ > ]]>0
    </select>
    <select id="getTrainerLoc" resultMap="trainerRM" parameterType="map">
    	select a.* from 
       (select row_number() over(order by name desc) rnum,
       id,name,location,career,rank,trainer_photo
       from trainer t,health_member m
       where t.trainer_id=m.id and location=#{LOC} and rank<![CDATA[ > ]]>0) a 
       where rnum between #{STARTROWNUM} and #{ENDROWNUM}
    </select>
    <select id="getTrainerRate" resultType="rateVO" parameterType="map">
    	select r.* from(
			select row_number() over(order by rate_no desc) rnum, tr.rate_no as rateNo, tr.user_id as userId, 
				tr.trainer_id as trainerId, tr.rate, tr.content, tr.rate_date as rateDate
			from trainer_rate tr, health_user hu
			where tr.user_id = hu.user_id and tr.trainer_id = #{id}
		) r
		where rnum between #{STARTROWNUM} and #{ENDROWNUM} order by rnum asc
    </select>
    <select id="getTotalRatingCount" resultType="int" parameterType="string">
    	select count(*) from trainer_rate tr, trainer t
		where tr.trainer_id = t.trainer_id and tr.trainer_id = #{id}
    </select>
</mapper>