<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trainerpage">
 	<select id="trainerPtList"  parameterType="map" resultType="memberVO" >
 	   select a.* from 
       (select row_number() over(order by h.nickname desc) rnum,
       m.user_id as id,h.nickname,h.name,h.address,h.e_mail as email,h.tel
       from health_member h,matching m
       where m.trainer_id=#{id} and m.user_id=h.id
       and apply_result='Y' and accept_result='N') a 
       where rnum between #{startRowNumber} and #{endRowNumber}
 	</select>
 	<select id="trainerPtListCount"  resultType="int" >
		select count(*) from matching where trainer_id=#{value}
		and apply_result='Y' and accept_result='N'
 	</select>
 	<select id="trainerMatchingList"  parameterType="map" resultType="memberVO" >
 		select a.* from 
       (select row_number() over(order by h.nickname desc) rnum,
       m.user_id as id,h.nickname,h.name,h.address,h.e_mail as email,h.tel
       from health_member h,matching m
       where m.trainer_id=#{id} and m.user_id=h.id
       and apply_result='Y' and accept_result='Y') a 
       where rnum between #{startRowNumber} and #{endRowNumber}
 	</select>
 	<select id="trainerMatchingListCount"  resultType="int">
 		select count(*) from matching where trainer_id=#{value}
		and apply_result='Y' and accept_result='Y'
 	</select>
 	<update id="trainerMatcingUpdate" parameterType="map">
		update matching set accept_result='Y',matching_date=(select add_months(pay_date,period) 
		from(select pay_date,period,row_number() over(order by pay_date desc) rnum from pay 
		where user_id=#{userId} and trainer_id=#{trainerId})  where rnum=1)
		where user_id=#{userId} and trainer_id=#{trainerId}
 	</update>
 	<update id="trainerPayUpdate" parameterType="map">
 		update pay
		set pay_date=sysdate,pay_state='PT중'
		where pay_no=(select pay_no from(select pay_no,row_number() over(order by pay_date desc) rnum 
		from pay where user_id=#{userId} and trainer_id=#{trainerId}) where rnum=1 )
 	</update>
 	<insert id="userMatchingInsert" parameterType="map">
 		insert into matching
 		values(#{userId},#{trainerId},'Y','N',sysdate)
 	</insert>
 	<insert id="payInsert" parameterType="map">
 	 <selectKey keyProperty="no" resultType="int" order="BEFORE">
         select pay_no_seq.nextval from dual
      </selectKey> 
 	insert into pay
 	values(#{no},#{price},sysdate,'입금대기',#{userId},#{trainerId},#{period})
 	</insert>
 	<select id="userPtList"  parameterType="map" resultType="memberVO" >
 	   select a.* from 
       (select row_number() over(order by h.nickname desc) rnum,
       m.trainer_id as id,h.nickname,h.name,h.address,h.e_mail as email,h.tel
       from health_member h,matching m
       where m.user_id=#{id} and m.trainer_id=h.id
       and apply_result='Y' and accept_result='N') a 
       where rnum between #{startRowNumber} and #{endRowNumber}
 	</select>
 	<select id="userPtListCount"  resultType="int" >
		select count(*) from matching where user_id=#{value}
		and apply_result='Y' and accept_result='N'
 	</select>
 	<select id="userPtMatchingList"  parameterType="map" resultType="memberVO" >
 	   select a.* from 
       (select row_number() over(order by h.nickname desc) rnum,
       m.trainer_id as id,h.nickname,h.name,h.address,h.e_mail as email,h.tel
       from health_member h,matching m
       where m.user_id=#{id} and m.trainer_id=h.id
       and apply_result='Y' and accept_result='Y') a 
       where rnum between #{startRowNumber} and #{endRowNumber}
 	</select>
 	<select id="userPtMatchingListCount"  resultType="int" >
		select count(*) from matching where user_id=#{value}
		and apply_result='Y' and accept_result='Y'
 	</select>
 	<select id="userTrainerPay" parameterType="map" resultType="payVO">
		select *
		from(select pay_no as payNo,price,to_char(pay_date,'YY-MM-DD HH:MI' )as payDate,
		pay_state as payState,user_id as userId,trainer_id as trainerId,period,row_number() over
		(order by pay_date desc) rnum from pay
		where user_id=#{userId} and trainer_id=#{trainerId}) 
		where rnum=1	
 	</select>
 	<update id="userDepositUpate" parameterType="map">
 		update pay set pay_state='입금완료',pay_date=sysdate where user_id=#{userId} and trainer_id=#{trainerId}
 	</update>
 	<select id="countExistMatching" parameterType="map" resultType="int">
 		select count(*)from matching where trainer_id=#{trainerId} and user_id=#{userId}
		and apply_result='Y' and accept_result='Y'
 	</select>
 	<select id="countExistMatching1" parameterType="map" resultType="int">
 		select count(*)from matching where trainer_id=#{trainerId} and user_id=#{userId}
		and apply_result='Y' and accept_result='N'
 	</select>
 	<select id="countExistFollowing" parameterType="map" resultType="int">
 		select count(*)from following
 		where apply_result='Y' and accept_result='Y' 
 		and trainer_id=#{trainerId} and user_id=#{userId}
 	</select>
 	<select id="getFollowerTotalCount" resultType="int">
 	select count(*) 
	from following 
	where apply_result='Y' and accept_result='N' and trainer_id=#{value}
 	</select>
 	<select id="getFollowerCount" resultType="int">
 	select count(*) 
	from following 
	where apply_result='Y' and trainer_id=#{value}
 	</select>
 	<select id="getFollowerList" parameterType="map" resultType="memberVO">
 	select a.* from 
       (select row_number() over(order by nickname desc) rnum,
       f.user_id as id,m.nickname
       from health_member m,following f
       where f.trainer_id=#{ID} and f.user_id=m.id
       and apply_result='Y' and accept_result='N') a 
       where rnum between #{STARTROWNUM} and #{ENDROWNUM}
 	</select>
 	
 	<select id="selectAcceptState" parameterType="map" resultType="String">
 	select accept_result
 	from following
 	where user_id=#{USERID} and trainer_id=#{TRAINERID}
 	</select>
 	
 	<update id="updateAcceptState" parameterType="map">
 	update following set accept_result=#{STATE}
 	where user_id=#{USERID} and trainer_id=#{TRAINERID}
 	</update>
 	
 	<select id="getBothFollowTotalCount" resultType="int">
 	select count(*) 
	from following 
	where apply_result='Y' and accept_result='Y' and trainer_id=#{value}
 	</select>
 	<select id="getBothFollowList" parameterType="map" resultType="memberVO">
 	select a.* from 
       (select row_number() over(order by nickname desc) rnum,
       f.user_id as id,m.nickname
       from health_member m,following f
       where f.trainer_id=#{TRAINERID} and f.user_id=m.id
       and apply_result='Y' and accept_result='Y') a 
       where rnum between #{STARTROWNUM} and #{ENDROWNUM}
 	</select>
</mapper>
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















